name: build

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  pull-requests: write

jobs:
  build_and_release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@2.1.8
        with:
          path: |
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Check with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --relesase --all-features
      - name: Release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: rust
          package-name: ltc
      - name: Release artifacts
        uses: rust-build/rust-build.action@v1.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}